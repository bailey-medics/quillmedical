name: "Quality checks (non-main)"

on:
  push:
    branches-ignore:
      - main
      - master
  pull_request:
    branches:
      - "**"

permissions:
  contents: read

concurrency:
  group: quality-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend-precommit:
    name: "Backend: pre-commit (Ruff/Black/etc.)"
    runs-on: ubuntu-latest
    if: ${{ github.ref_name != 'main' && github.ref_name != 'master' }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: "Cache pre-commit"
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: precommit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: "Install pre-commit"
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      - name: "Run pre-commit on all files"
        run: pre-commit run --all-files --show-diff-on-failure

  frontend-lint:
    name: "Frontend: ESLint/Prettier/Stylelint + Typecheck"
    runs-on: ubuntu-latest
    if: ${{ github.ref_name != 'main' && github.ref_name != 'master' }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Set up Node"
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"
          cache-dependency-path: |
            package.json
            yarn.lock
            frontend/package.json
            frontend/yarn.lock

      - name: "Install workspaces"
        run: |
          # Enable corepack and use the project's Yarn (Berry) version
          corepack enable
          corepack prepare yarn@4.9.4 --activate
          yarn --version
          yarn install

      - name: "ESLint"
        # run the frontend's lint script via --cwd so this works with Yarn Classic and Yarn Berry
        run: yarn --cwd frontend run lint --silent -- --max-warnings=0

      - name: "Prettier"
        # run the workspace's prettier binary under Yarn Berry
        run: yarn --cwd frontend prettier --check .

      - name: "Stylelint"
        run: yarn --cwd frontend stylelint "**/*.{css,scss}"

      - name: "Typecheck"
        # use the workspace's TypeScript compiler
        run: yarn --cwd frontend tsc --noEmit
