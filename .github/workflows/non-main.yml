name: non-main

on:
  push:
    branches-ignore: [main, master]
  pull_request:
    branches-ignore: [main, master]

permissions:
  contents: read

jobs:
  code-quality:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Python pre-commit (only if you use it)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files

      # Node / Yarn Berry
      - name: Set up Node (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Enable Corepack & pin Yarn
        run: |
          corepack enable
          corepack prepare yarn@4.10.3 --activate
          yarn --version

      - name: Cache Yarn (PnP)
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
            .pnp.cjs
            .pnp.data.json
          key: ${{ runner.os }}-yarn4-${{ hashFiles('yarn.lock', '.yarnrc.yml') }}
          restore-keys: |
            ${{ runner.os }}-yarn4-

      - name: Install deps
        run: yarn install --immutable

      # JS/TS linters â€” use workspace exec (or run from frontend dir)
      - name: ESLint (frontend, fail on warnings)
        run: yarn workspace frontend exec eslint . --max-warnings=0 --format github

      - name: Prettier (check only)
        run: yarn workspace frontend exec prettier --check "**/*.{js,jsx,ts,tsx,css,scss,md,json,mdx,html}" --ignore-unknown

      - name: Stylelint (scss/css)
        run: yarn workspace frontend exec stylelint "**/*.{scss,css}" --allow-empty-input

      # Optional: TypeScript type-check
      # - name: TypeScript (noEmit)
      #   run: yarn workspace frontend exec tsc --noEmit
