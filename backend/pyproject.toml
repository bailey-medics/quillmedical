[project]
name = "backend"
version = "0.1.0"
description = "Backend fastAPI and git services"
authors = [
    {name = "Cotswoldsmaker",email = "mark@letsdodigital.org"}
]
requires-python = ">=3.10"
dependencies = [
    "fastapi==0.115.2",
    "uvicorn[standard]==0.30.6",
    "pydantic==2.9.2",
    "sqlalchemy==2.0.35",
    "psycopg2-binary==2.9.9",
    "python-dotenv==1.0.1",
    "httpx==0.27.0",
    "python-jose[cryptography] (>=3.5.0,<4.0.0)",
    "passlib[argon2] (>=1.7.4,<2.0.0)",
    "pyotp (>=2.8.0,<3.0.0)",
    "itsdangerous (>=2.2.0,<3.0.0)",
    "pydantic-settings (>=2.10.1,<3.0.0)",
    "alembic (>=1.16.5,<2.0.0)"
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false

[tool.poetry.group.dev.dependencies]
mypy = "^1.18.2"
pytest = "^8.4.2"
pytest-cov = "^7.0.0"

[tool.ruff]
line-length = 79
target-version = "py312"
# Rule sets: pyflakes/pycodestyle/imports/pyupgrade/bugbear
lint.select = ["E", "F", "W", "I", "UP", "B"]
# Let Black own long lines (optional; ruff will still flag egregious cases)
lint.ignore = ["E501"]

[tool.black]
line-length = 79
target-version = ["py312"]

[tool.mypy]
python_version = "3.12"
strict = false
disallow_untyped_defs = true
warn_unused_ignores = true
warn_redundant_casts = true
# Pydantic v2 works fine without a plugin; enable later if you want.
# plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
addopts = "-q --strict-markers --maxfail=1"
testpaths = ["tests"]
